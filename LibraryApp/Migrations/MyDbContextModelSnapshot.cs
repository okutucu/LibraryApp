// <auto-generated />
using System;
using LibraryApp.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LibraryApp.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LibraryApp.Models.AppUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MofidiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2022, 5, 13, 11, 1, 31, 484, DateTimeKind.Local).AddTicks(1102),
                            Password = "$2a$11$32Ci7fsUEYq8fT0/jlPmmennqRPu/d35fN15BVvoMMq3CfWBYhpny",
                            Role = 1,
                            Status = 1,
                            UserName = "admin"
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2022, 5, 13, 11, 1, 31, 488, DateTimeKind.Local).AddTicks(3687),
                            Password = "$2a$11$XYqH84sfCb09wEwDdIoNzO/fokpaLKQlc74U.syizRdbyfjgpyNYa",
                            Role = 2,
                            Status = 1,
                            UserName = "oguz"
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.Author", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Isim");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Soyisim");

                    b.Property<DateTime?>("MofidiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Yazarlar");
                });

            modelBuilder.Entity("LibraryApp.Models.Book", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorID")
                        .HasColumnType("int");

                    b.Property<string>("BookName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BookTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MofidiedDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("PageCount")
                        .HasColumnType("smallint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AuthorID");

                    b.HasIndex("BookTypeID");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("LibraryApp.Models.BookType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MofidiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("BookTypes");
                });

            modelBuilder.Entity("LibraryApp.Models.Operation", b =>
                {
                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("BookID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MofidiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("StudentID", "BookID");

                    b.HasIndex("BookID");

                    b.ToTable("Operasyonlar");
                });

            modelBuilder.Entity("LibraryApp.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MofidiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2022, 5, 13, 11, 1, 31, 489, DateTimeKind.Local).AddTicks(8815),
                            FirstName = "Serhan",
                            LastName = "Kılıç",
                            PhoneNumber = "5555555",
                            Status = 1
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2022, 5, 13, 11, 1, 31, 489, DateTimeKind.Local).AddTicks(9994),
                            FirstName = "Kaan",
                            LastName = "Kutucu",
                            PhoneNumber = "33333",
                            Status = 1
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2022, 5, 13, 11, 1, 31, 490, DateTimeKind.Local).AddTicks(11),
                            FirstName = "Özgür",
                            LastName = "Cansız",
                            PhoneNumber = "123456",
                            Status = 1
                        },
                        new
                        {
                            ID = 4,
                            CreatedDate = new DateTime(2022, 5, 13, 11, 1, 31, 490, DateTimeKind.Local).AddTicks(15),
                            FirstName = "Zeynep",
                            LastName = "Kurt",
                            PhoneNumber = "4444444",
                            Status = 1
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.StudentDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MofidiedDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("SchoolNumber")
                        .HasColumnType("smallint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StudentID")
                        .IsUnique();

                    b.ToTable("StudentDetail");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2022, 5, 13, 11, 1, 31, 490, DateTimeKind.Local).AddTicks(769),
                            Gender = 1,
                            SchoolNumber = (short)244,
                            Status = 1,
                            StudentID = 1
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2022, 5, 13, 11, 1, 31, 490, DateTimeKind.Local).AddTicks(2037),
                            Gender = 1,
                            SchoolNumber = (short)123,
                            Status = 1,
                            StudentID = 2
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2022, 5, 13, 11, 1, 31, 490, DateTimeKind.Local).AddTicks(2055),
                            Gender = 1,
                            SchoolNumber = (short)444,
                            Status = 1,
                            StudentID = 3
                        },
                        new
                        {
                            ID = 4,
                            CreatedDate = new DateTime(2022, 5, 13, 11, 1, 31, 490, DateTimeKind.Local).AddTicks(2059),
                            Gender = 2,
                            SchoolNumber = (short)122,
                            Status = 1,
                            StudentID = 4
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.Book", b =>
                {
                    b.HasOne("LibraryApp.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Models.BookType", "BookType")
                        .WithMany("Books")
                        .HasForeignKey("BookTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("BookType");
                });

            modelBuilder.Entity("LibraryApp.Models.Operation", b =>
                {
                    b.HasOne("LibraryApp.Models.Book", "Book")
                        .WithMany("Operations")
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Models.Student", "Student")
                        .WithMany("Operations")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("LibraryApp.Models.StudentDetail", b =>
                {
                    b.HasOne("LibraryApp.Models.Student", "Student")
                        .WithOne("StudentDetail")
                        .HasForeignKey("LibraryApp.Models.StudentDetail", "StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("LibraryApp.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LibraryApp.Models.Book", b =>
                {
                    b.Navigation("Operations");
                });

            modelBuilder.Entity("LibraryApp.Models.BookType", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LibraryApp.Models.Student", b =>
                {
                    b.Navigation("Operations");

                    b.Navigation("StudentDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
